MACHINE_KEY
Added : newMachine of type ID in namespace 0
newMachine : ID
ACTIONS
RETURN
VOID
;
ON
TRANSITION_KEY
Added : baz of type ID in namespace 0
baz : ID
;
{
STATE_KEY
Added : s1 of type ID in namespace 0
s1 : ID
,
Added : s2 of type ID in namespace 0
s2 : ID
,
Added : s3 of type ID in namespace 0
s3 : ID
;
EVENT_KEY
Added : e1 of type ID in namespace 0
e1 : ID
,
Added : e2 of type ID in namespace 0
e2 : ID
,
Added : e3 of type ID in namespace 0
e3 : ID
;
EVENT_KEY
Added : e4 of type ID in namespace 0
e4 : ID
=
Added : ext4 of type ID in namespace 0
ext4 : ID
PREFIX
:
Quoted string: foo
{
Added : se1 of type ID in namespace 0
se1 : ID
=
Added : exts1 of type ID in namespace 0
exts1 : ID
,
Added : se2 of type ID in namespace 0
se2 : ID
=
Added : exts2 of type ID in namespace 0
exts2 : ID
}
;
ACTION_KEY
Added : a1 of type ID in namespace 0
a1 : ID
[
Found : e1 of type ID
e1 : ID
,
Found : s1 of type ID
s1 : ID
]
TRANSITION_KEY
Found : s1 of type ID
s1 : ID
;
ACTION_KEY
Found : a1 of type ID
a1 : ID
[
Found : e1 of type ID
e1 : ID
,
Found : s1 of type ID
s1 : ID
]
TRANSITION_KEY
Added : transitionFn of type ID in namespace 0
transitionFn : ID
;
Doc Comment:

		A Document Comment
	
ACTION_KEY
Added : a2 of type ID in namespace 0
a2 : ID
[
Found : e1 of type ID
e1 : ID
.
Found : se1 of type ID
se1 : ID
,
(
Found : s2 of type ID
s2 : ID
,
Found : s3 of type ID
s3 : ID
)
]
TRANSITION_KEY
Found : transitionFn of type ID
transitionFn : ID
;
TRANSITION_KEY
[
(
Found : e2 of type ID
e2 : ID
,
Found : e3 of type ID
e3 : ID
)
,
(
Found : s1 of type ID
s1 : ID
,
Found : s2 of type ID
s2 : ID
,
Found : s3 of type ID
s3 : ID
)
]
Added : transitionFn1 of type ID in namespace 0
transitionFn1 : ID
;
Found : transitionFn1 of type ID
transitionFn1 : ID
RETURNS
Found : s1 of type ID
s1 : ID
,
Found : s2 of type ID
s2 : ID
;
Added : transitionFn2 of type ID in namespace 0
transitionFn2 : ID
RETURNS
Found : s2 of type ID
s2 : ID
,
Found : s3 of type ID
s3 : ID
;
}
