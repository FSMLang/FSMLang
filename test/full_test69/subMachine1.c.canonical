/**
	subMachine1.c

	This file automatically generated by FSMLang
*/

#include "subMachine1.h"
#include <stddef.h>

#ifndef DBG_PRINTF
#define DBG_PRINTF(...)
#endif


const SUB_MACHINE1_STATE_FN subMachine1_state_fn_array[subMachine1_numStates] = 
{
	  subMachine1_ss1_stateFn
	, subMachine1_ss2_stateFn
	, subMachine1_ss3_stateFn
};

NEW_MACHINE_EVENT subMachine1_sub_machine_fn(NEW_MACHINE_EVENT e)
{
	return subMachine1FSM(psubMachine1, e);
}


NEW_MACHINE_SUB_FSM_IF subMachine1_sub_fsm_if =
{
		.subFSM = subMachine1_sub_machine_fn
	, .first_event = newMachine_subMachine1_ee1
	, .last_event = newMachine_subMachine1_ee3
};

SUB_MACHINE1 subMachine1 = {
	subMachine1_ss1,
	newMachine_subMachine1_ee1,
	&subMachine1_state_fn_array,
	subMachine1FSM
};

pSUB_MACHINE1 psubMachine1 = &subMachine1;


#ifndef EVENT_IS_NOT_EXCLUDED_FROM_LOG
#define EVENT_IS_NOT_EXCLUDED_FROM_LOG(e) (e == e)
#endif
NEW_MACHINE_EVENT subMachine1FSM(pSUB_MACHINE1 pfsm, NEW_MACHINE_EVENT event)
{
	NEW_MACHINE_EVENT e = event;

	while (
		(e != THIS(noEvent))
		&& (e >= THIS(ee1))
	)
	{

#ifdef SUB_MACHINE1_DEBUG
if (EVENT_IS_NOT_EXCLUDED_FROM_LOG(e))
{
	DBG_PRINTF("event: %s; state: %s"
,SUB_MACHINE1_EVENT_NAMES[e - THIS(ee1)]
,SUB_MACHINE1_STATE_NAMES[pfsm->state]
);
}
#endif

	/* This is read-only data to facilitate error reporting in action functions */
	pfsm->event = e;

		e = ((* (*pfsm->statesArray)[pfsm->state])(pfsm,e));

	}

	return e == THIS(noEvent) ? PARENT(noEvent) : e;
}

NEW_MACHINE_EVENT subMachine1_ss1_stateFn(pSUB_MACHINE1 pfsm, NEW_MACHINE_EVENT e)
{
	NEW_MACHINE_EVENT retVal = THIS(noEvent);

	switch(e)
	{
	case THIS(ee1):
		retVal = subMachine1_aa1(pfsm);
		pfsm->state = subMachine1_ss2;
		break;
	case THIS(ee2):
		retVal = subMachine1_aa2(pfsm);
		pfsm->state = subMachine1_ss3;
		break;
	default:
		DBG_PRINTF("subMachine1_noAction");
		break;
	}

	return retVal;
}

NEW_MACHINE_EVENT subMachine1_ss2_stateFn(pSUB_MACHINE1 pfsm, NEW_MACHINE_EVENT e)
{
	NEW_MACHINE_EVENT retVal = THIS(noEvent);

	switch(e)
	{
	default:
		DBG_PRINTF("subMachine1_noAction");
		break;
	}

	return retVal;
/* we only just now know we did not use this */
	(void) pfsm;
}

NEW_MACHINE_EVENT subMachine1_ss3_stateFn(pSUB_MACHINE1 pfsm, NEW_MACHINE_EVENT e)
{
	NEW_MACHINE_EVENT retVal = THIS(noEvent);

	switch(e)
	{
	default:
		DBG_PRINTF("subMachine1_noAction");
		break;
	}

	return retVal;
/* we only just now know we did not use this */
	(void) pfsm;
}


NEW_MACHINE_EVENT __attribute__((weak)) subMachine1_aa1(pSUB_MACHINE1 pfsm)
{
	DBG_PRINTF("weak: subMachine1_aa1");
	(void) pfsm;
	return THIS(noEvent);
}

NEW_MACHINE_EVENT __attribute__((weak)) subMachine1_aa2(pSUB_MACHINE1 pfsm)
{
	DBG_PRINTF("weak: subMachine1_aa2");
	(void) pfsm;
	return THIS(noEvent);
}



#ifdef SUB_MACHINE1_DEBUG
char *SUB_MACHINE1_EVENT_NAMES[] = {
	 "subMachine1_ee1"
	, "subMachine1_ee2"
	, "subMachine1_ee3"
	, "subMachine1_noEvent"
	, "subMachine1_numEvents"
};

char *SUB_MACHINE1_STATE_NAMES[] = {
	 "subMachine1_ss1"
	,"subMachine1_ss2"
	,"subMachine1_ss3"
};

#endif
