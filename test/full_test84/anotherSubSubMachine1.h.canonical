/**
	anotherSubSubMachine1.h

	This file automatically generated by FSMLang
*/

#ifndef _ANOTHERSUBSUBMACHINE1_H_
#define _ANOTHERSUBSUBMACHINE1_H_

#include "another.h"

#ifdef ANOTHER_SUB_SUB_MACHINE1_DEBUG
#include <stdio.h>
#include <stdlib.h>
#endif

#define DECLARE_ANOTHER_SUB_SUB_MACHINE1_MACHINE(A) \
ANOTHER_SUB_SUB_MACHINE1 A =\
{\
	anotherSubSubMachine1_z1,\n	anotherSubSubMachine1_anotherSubMachine1_noEvent,\
	&anotherSubSubMachine1_state_fn_array,\
	anotherSubSubMachine1FSM\
};\
ANOTHER_SUB_SUB_MACHINE1 *p##A = &(A);

/*
	sub-machine events are included in the top-level machine event enumeration.
	These macros set the appropriate names for events from THIS machine
	and those from the PARENT machine.

	They may be turned off as needed.
*/
#ifndef NO_EVENT_CONVENIENCE_MACROS
#undef THIS
#define THIS(A) anotherSubMachine1_anotherSubSubMachine1_##A
#define PARENT(A) anotherSubMachine1_##A
#endif

#ifdef ANOTHER_SUB_SUB_MACHINE1_DEBUG
extern char *ANOTHER_SUB_SUB_MACHINE1_EVENT_NAMES[];
#endif

typedef enum {
	 anotherSubSubMachine1_z1
	, anotherSubSubMachine1_z2
	, anotherSubSubMachine1_numStates
} ANOTHER_SUB_SUB_MACHINE1_STATE;

#ifdef ANOTHER_SUB_SUB_MACHINE1_DEBUG
extern char *ANOTHER_SUB_SUB_MACHINE1_STATE_NAMES[];
#endif

typedef struct _anotherSubSubMachine1_struct_ ANOTHER_SUB_SUB_MACHINE1, *pANOTHER_SUB_SUB_MACHINE1;
#undef FSM_TYPE_PTR
#define FSM_TYPE_PTR pANOTHER_SUB_SUB_MACHINE1
extern ANOTHER_SUB_SUB_MACHINE1 anotherSubSubMachine1;

extern pANOTHER_SUB_SUB_MACHINE1 panotherSubSubMachine1;

typedef ANOTHER_SUB_MACHINE1_EVENT (*ANOTHER_SUB_SUB_MACHINE1_ACTION_FN)(pANOTHER_SUB_SUB_MACHINE1);

typedef ANOTHER_SUB_MACHINE1_EVENT (*ANOTHER_SUB_SUB_MACHINE1_FSM)(pANOTHER_SUB_SUB_MACHINE1,ANOTHER_SUB_MACHINE1_EVENT);

ANOTHER_SUB_MACHINE1_EVENT anotherSubSubMachine1FSM(pANOTHER_SUB_SUB_MACHINE1,ANOTHER_SUB_MACHINE1_EVENT);

typedef ANOTHER_SUB_MACHINE1_EVENT (*ANOTHER_SUB_SUB_MACHINE1_STATE_FN)(pANOTHER_SUB_SUB_MACHINE1,ANOTHER_SUB_MACHINE1_EVENT);

extern const ANOTHER_SUB_SUB_MACHINE1_STATE_FN anotherSubSubMachine1_state_fn_array[anotherSubSubMachine1_numStates];

struct _anotherSubSubMachine1_struct_ {
	ANOTHER_SUB_SUB_MACHINE1_STATE					state;
	ANOTHER_SUB_MACHINE1_EVENT					event;
	ANOTHER_SUB_SUB_MACHINE1_STATE_FN const	(*statesArray)[anotherSubSubMachine1_numStates];
	ANOTHER_SUB_SUB_MACHINE1_FSM						fsm;
};

ANOTHER_SUB_MACHINE1_EVENT anotherSubSubMachine1_z1_stateFn(pANOTHER_SUB_SUB_MACHINE1,ANOTHER_SUB_MACHINE1_EVENT);
ANOTHER_SUB_MACHINE1_EVENT anotherSubSubMachine1_z2_stateFn(pANOTHER_SUB_SUB_MACHINE1,ANOTHER_SUB_MACHINE1_EVENT);

ANOTHER_SUB_MACHINE1_EVENT anotherSubSubMachine1_x1(pANOTHER_SUB_SUB_MACHINE1);
ANOTHER_SUB_MACHINE1_EVENT anotherSubSubMachine1_x2(pANOTHER_SUB_SUB_MACHINE1);

#endif
