/**
	top_level.c

	This file automatically generated by FSMLang
*/

#include "top_level.h"
#include <stddef.h>

#ifndef DBG_PRINTF
#define DBG_PRINTF(...)
#endif

const TOP_LEVEL_STATE_FN top_level_state_fn_array[top_level_numStates] = 
{
	  top_level_s1_stateFn
	, top_level_s2_stateFn
	, top_level_s3_stateFn
};


pTOP_LEVEL_SUB_FSM_IF top_level_sub_fsm_if_array[top_level_numSubMachines] =
{
	&sub_machine1_sub_fsm_if
	, &sub_machine2_sub_fsm_if
	, &sub_machine3_sub_fsm_if
};

TOP_LEVEL top_level = {
	top_level_s1,
	top_level_e1,
	&top_level_state_fn_array,
	&top_level_sub_fsm_if_array,
	top_levelFSM
};

pTOP_LEVEL ptop_level = &top_level;

static TOP_LEVEL_EVENT findAndRunSubMachine(pTOP_LEVEL,TOP_LEVEL_EVENT);


#ifndef EVENT_IS_NOT_EXCLUDED_FROM_LOG
#define EVENT_IS_NOT_EXCLUDED_FROM_LOG(e) (e == e)
#endif
void top_levelFSM(pTOP_LEVEL pfsm, TOP_LEVEL_EVENT event)
{
	TOP_LEVEL_EVENT e = event;

	while (e != top_level_noEvent) {

#ifdef TOP_LEVEL_DEBUG
if (EVENT_IS_NOT_EXCLUDED_FROM_LOG(e))
{
	DBG_PRINTF("event: %s; state: %s"
,TOP_LEVEL_EVENT_NAMES[e]
,TOP_LEVEL_STATE_NAMES[pfsm->state]
);
}
#endif

	/* This is read-only data to facilitate error reporting in action functions */
	pfsm->event = e;

		if (e < top_level_noEvent)
		{
			e = ((* (*pfsm->statesArray)[pfsm->state])(pfsm,e));
		}
		else
		{
			e = findAndRunSubMachine(pfsm, e);
		}

	}
}


static TOP_LEVEL_EVENT findAndRunSubMachine(pTOP_LEVEL pfsm, TOP_LEVEL_EVENT e)
{
	for (TOP_LEVEL_SUB_MACHINES machineIterator = top_level_firstSubMachine;
	     machineIterator < top_level_numSubMachines;
	     machineIterator++
	    )
	{
			if (
			   ((*pfsm->subMachineArray)[machineIterator]->first_event <= e)
			   && ((*pfsm->subMachineArray)[machineIterator]->last_event >= e)
			    )
			{
				return ((*(*pfsm->subMachineArray)[machineIterator]->subFSM)(e));
			}
	}

	return top_level_noEvent;

}

TOP_LEVEL_EVENT top_level_s1_stateFn(pTOP_LEVEL pfsm, TOP_LEVEL_EVENT e)
{
	TOP_LEVEL_EVENT retVal = top_level_noEvent;
	TOP_LEVEL_STATE new_s  = top_level_s1;

	switch(e)
	{
	case top_level_e1:
		retVal = top_level_a1(pfsm);
		new_s = top_level_s2;
		break;
	default:
		DBG_PRINTF("top_level_noAction");
		break;
	}


	if (top_level_s1 != new_s)
	{
		top_level_foo(pfsm,new_s);
		pfsm->state = new_s;

	}


	return retVal;
}

TOP_LEVEL_EVENT top_level_s2_stateFn(pTOP_LEVEL pfsm, TOP_LEVEL_EVENT e)
{
	TOP_LEVEL_EVENT retVal = top_level_noEvent;
	TOP_LEVEL_STATE new_s  = top_level_s2;

	switch(e)
	{
	case top_level_e2:
		retVal = top_level_activate_sub_machine1(pfsm);
		break;
	case top_level_e3:
		retVal = top_level_activate_sub_machine2(pfsm);
		break;
	case top_level_e4:
		retVal = top_level_activate_sub_machine3(pfsm);
		new_s = top_level_s3;
		break;
	default:
		DBG_PRINTF("top_level_noAction");
		break;
	}


	if (top_level_s2 != new_s)
	{
		top_level_foo(pfsm,new_s);
		pfsm->state = new_s;

	}


	return retVal;
}

TOP_LEVEL_EVENT top_level_s3_stateFn(pTOP_LEVEL pfsm, TOP_LEVEL_EVENT e)
{
	TOP_LEVEL_EVENT retVal = top_level_noEvent;

	switch(e)
	{
	case top_level_e4:
		retVal = top_level_activate_sub_machine3(pfsm);
		break;
	case top_level_e5:
		retVal = top_level_activate_sub_machine2(pfsm);
		break;
	default:
		DBG_PRINTF("top_level_noAction");
		break;
	}

	return retVal;
}


TOP_LEVEL_EVENT __attribute__((weak)) top_level_a1(pTOP_LEVEL pfsm)
{
	DBG_PRINTF("weak: top_level_a1");
	(void) pfsm;
	return THIS(noEvent);
}

TOP_LEVEL_EVENT __attribute__((weak)) top_level_activate_sub_machine1(pTOP_LEVEL pfsm)
{
	DBG_PRINTF("weak: top_level_activate_sub_machine1");
	(void) pfsm;
	return THIS(noEvent);
}

TOP_LEVEL_EVENT __attribute__((weak)) top_level_activate_sub_machine2(pTOP_LEVEL pfsm)
{
	DBG_PRINTF("weak: top_level_activate_sub_machine2");
	(void) pfsm;
	return THIS(noEvent);
}

TOP_LEVEL_EVENT __attribute__((weak)) top_level_activate_sub_machine3(pTOP_LEVEL pfsm)
{
	DBG_PRINTF("weak: top_level_activate_sub_machine3");
	(void) pfsm;
	return THIS(noEvent);
}


#ifdef TOP_LEVEL_DEBUG
char *TOP_LEVEL_EVENT_NAMES[] = {
	 "top_level_e1"
	, "top_level_e2"
	, "top_level_e3"
	, "top_level_e4"
	, "top_level_e5"
	, "top_level_noEvent"
	, "top_level_numEvents"
	, "top_level_sub_machine1_e1"
	, "top_level_sub_machine1_e2"
	, "top_level_sub_machine1_e3"
	, "top_level_sub_machine1_noEvent"
	, "top_level_sub_machine2_e1"
	, "top_level_sub_machine2_e2"
	, "top_level_sub_machine2_e3"
	, "top_level_sub_machine2_noEvent"
	, "top_level_sub_machine3_e1"
	, "top_level_sub_machine3_e2"
	, "top_level_sub_machine3_e3"
	, "top_level_sub_machine3_noEvent"
};

char *TOP_LEVEL_STATE_NAMES[] = {
	 "top_level_s1"
	,"top_level_s2"
	,"top_level_s3"
};

#endif
