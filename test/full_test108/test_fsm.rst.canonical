..
   test_fsm.rst

   This file automatically generated by FSMLang

=========
test_fsm
=========


.. toctree::
   :hidden:
   :maxdepth: 2

   sub

.. list-table:: Machine Statistics
   :align: left

   * - Number of events:
     - 4
   * - Events not handled:
     - 0
   * - Events handled in one state:
     - 2
   * - At least one event handled the same in all states?
     - no
   * - Number of states:
     - 3
   * - Number of states with entry functions:
     - 0
   * - Number of states with exit functions:
     - 0
   * - States handling no events:
     - 1
   * - States handling exactly one event:
     - 0
   * - States with no way in:
     - 1
   * - States with no way out:
     - 1



.. list-table:: State Chart
   :align: left
   :header-rows: 1
   :stub-columns: 1
   :class: scrollable

   * -
     - :ref:`e1 <test_fsm.e1>`
     - :ref:`e2 <test_fsm.e2>`
     - :ref:`e3 <test_fsm.e3>`
     - :ref:`e4 <test_fsm.e4>`
   * - :ref:`s1 <test_fsm.s1>`
     - :ref:`a1 <test_fsm.a1>`
     - | :ref:`a2 <test_fsm.a2>`
       | transition: :ref:`s2 <test_fsm.s2>`
     - 
     - :ref:`a4 <test_fsm.a4>`
   * - :ref:`s2 <test_fsm.s2>`
     - 
     - transition: :ref:`s1 <test_fsm.s1>`
     - | :ref:`a3 <test_fsm.a3>`
       | transition: :ref:`tf1 <test_fsm.tf1>`
     - :ref:`a4 <test_fsm.a4>`
   * - :ref:`s3 <test_fsm.s3>`
     - 
     - 
     - 
     - 


Events
-------


.. _test_fsm.e1:

e1
~~~

This event is handled identically in 1 states.



These states handle this event:

* :ref:`s1 <test_fsm.s1>`


This yields a state density of 33%.



These actions are taken in response to this event:

* :ref:`a1 <test_fsm.a1>`


.. _test_fsm.e2:

e2
~~~

These states handle this event:

* :ref:`s1 <test_fsm.s1>`
* :ref:`s2 <test_fsm.s2>`


This yields a state density of 66%.



These actions are taken in response to this event:

* :ref:`a2 <test_fsm.a2>`


.. _test_fsm.e3:

e3
~~~

This event is handled identically in 1 states.



These states handle this event:

* :ref:`s2 <test_fsm.s2>`


This yields a state density of 33%.



These actions are taken in response to this event:

* :ref:`a3 <test_fsm.a3>`


.. _test_fsm.e4:

e4
~~~

This event is handled identically in 2 states.



These states handle this event:

* :ref:`s1 <test_fsm.s1>`
* :ref:`s2 <test_fsm.s2>`


This yields a state density of 66%.



These actions are taken in response to this event:

* :ref:`a4 <test_fsm.a4>`


States
-------


.. _test_fsm.s1:

s1
~~~

These events are handled in this state:

* :ref:`e1 <test_fsm.e1>`
* :ref:`e2 <test_fsm.e2>`
* :ref:`e4 <test_fsm.e4>`


This yields an event density of 75%.



These actions are taken in this state:

* :ref:`a1 <test_fsm.a1>`
* :ref:`a2 <test_fsm.a2>`
* :ref:`a4 <test_fsm.a4>`


These states transition into this state:

* :ref:`s2 <test_fsm.s2>`


This state transitions into these states:

* :ref:`s2 <test_fsm.s2>`


.. _test_fsm.s2:

s2
~~~

These events are handled in this state:

* :ref:`e2 <test_fsm.e2>`
* :ref:`e3 <test_fsm.e3>`
* :ref:`e4 <test_fsm.e4>`


This yields an event density of 75%.



These actions are taken in this state:

* :ref:`a3 <test_fsm.a3>`
* :ref:`a4 <test_fsm.a4>`


These states transition into this state:

* :ref:`s1 <test_fsm.s1>`


This state transitions into these states:

* :ref:`s1 <test_fsm.s1>`


.. _test_fsm.s3:

s3
~~~

.. attention::

   This state handles no events.



.. warning::

   There is no way into this state.



.. warning::

   There is no way out of this state.



Actions
--------


.. _test_fsm.a1:

a1
~~~

This action returns:

* :ref:`e4 <test_fsm.e4>`
* noEvent



.. _test_fsm.a2:

a2
~~~

This action returns:

* :ref:`e4 <test_fsm.e4>`
* noEvent



.. _test_fsm.a3:

a3
~~~

This action returns:

* noEvent



.. _test_fsm.a4:

a4
~~~

This action returns:

* :ref:`e1 <test_fsm.e1>`



Transition Functions
---------------------


.. _test_fsm.tf1:

tf1
~~~~

Returns:

* :ref:`s1 <test_fsm.s1>`
* :ref:`s2 <test_fsm.s2>`


Event Sequences
---------------------

.. list-table::
   :align: left
   :header-rows: 1
   :stub-columns: 1

   * - Name
     - Comment
     - Initial State
     - Sequence
     - Final State
   * - Sequence_0
     -  This is the happy path. 
     - s1
     - * e1: s1 ->s1 (a1)
       * e2: s1 ->s2 (a2)
       * e4: s2 ->s2 (a4)

     - Traced: s2
   * - Sequence_1
     - 
       | This, too is
       | a happy path.
       
     - s1
     - * e2: s1 ->s2 (a2)
       * e2: s2 ->s1 (No Action)

     - Traced: s1
   * - Sequence_2
     - 
     - s1
     - * e2: s1 ->s2 (a2)
       * e3: s2 ->s1 (a3)
          * | State machine indicates transition is via function tf1 and no transition was indicated in the sequence.
            | 
            | The first indicated return value was chosen.


     - Traced: s1
   * - Sequence_3
     - 
     - s1
     - * e2: s1 ->s2 (a2)
       * e3: s2 ->s1 (a3)
          * | State machine indicates transition is via function tf1.
            | 
            | The transition given in the sequence is found in the function's return declaration.


     - Traced: s1
   * - Sequence_4
     - 
     - s1
     - * e2: s1 ->s2 (a2)
       * e3: s2 ->s2 (a3)
          * | State machine indicates transition is via function tf1.
            | 
            | The transition given in the sequence is found in the function's return declaration.


     - Traced: s2
   * - Sequence_5
     - 
     - s1
     - * e2: s1 ->s2 (a2)
       * e3: s2 ->s3 (a3)
          * | State machine indicates transition is via function tf1.
            | 
            | The transition given in the sequence is not found in the function's return declaration.


     - Traced: s3
   * - Sequence_6
     - 
     - s1
     - * e3: s1 ->s1 (No Action)
       * e2: s1 ->s2 (a2)

     - Traced: s2
   * - Sequence_7
     - 
     - s1
     - * e2: s1 ->s2 (a2)
       * e2: s2 ->s3 (No Action)
          * The transition indicated in the sequence does not match the FSM.


     - Traced: s3
   * - eight
     - 
     - s2
     - * e2: s2 ->s1 (No Action)
       * e2: s1 ->s2 (a2)

     - Traced: s2
