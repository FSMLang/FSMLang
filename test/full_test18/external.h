typedef enum e_sf_message_event_class {
	SF_MESSAGE_EVENT_CLASS_TOUCH, /* Touch */
	SF_MESSAGE_EVENT_CLASS_MASS_STORAGE_MEDIA, /* MASS_STORAGE_MEDIA */
	SF_MESSAGE_EVENT_CLASS_RECIPE_STREAM_AVAILABLE_NOTICE, /* Recipe Stream Available Notice */
	SF_MESSAGE_EVENT_CLASS_DISPOSABLE_KIT_STATE_NOTICE, /* DISPOSABLE_KIT_STATE_NOTICE */
	SF_MESSAGE_EVENT_CLASS_PINCH_VALVE_FEEDBACK_NOTICE, /* PINCH_VALVE_FEEDBACK_NOTICE */
	SF_MESSAGE_EVENT_CLASS_CHAMBER_PRESSURE_SWITCH_STATE_NOTICE, /* CHAMBER_PRESSURE_SWITCH_STATE_NOTICE */
	SF_MESSAGE_EVENT_CLASS_DOOR_STATE_NOTICE, /* DOOR_STATE_NOTICE */
	SF_MESSAGE_EVENT_CLASS_REGULATOR_PRESSURE_NOTICE, /* REGULATOR_PRESSURE_NOTICE */
	SF_MESSAGE_EVENT_CLASS_TANK_PRESSURE_NOTICE, /* TANK_PRESSURE_NOTICE */
	SF_MESSAGE_EVENT_CLASS_EOR_READINGS_NOTICE, /* EOR_READINGS_NOTICE */
	SF_MESSAGE_EVENT_CLASS_EXHAUST_VALVE_STATE_NOTICE, /* EXHAUST_VALVE_STATE_NOTICE */
	SF_MESSAGE_EVENT_CLASS_FILL_VALVE_STATE_NOTICE, /* FILL_VALVE_STATE_NOTICE */
	SF_MESSAGE_EVENT_CLASS_PUMP_STATE_NOTICE, /* PUMP_STATE_NOTICE */
	SF_MESSAGE_EVENT_CLASS_RAW_EOR_TRIGGERED_STATE_NOTICE, /* RAW_EOR_TRIGGERED_STATE_NOTICE */
	SF_MESSAGE_EVENT_CLASS_TANK_PRESSURE_REQUEST, /* TANK_PRESSURE_REQUEST */
	SF_MESSAGE_EVENT_CLASS_PUMP_STATE_REQUEST, /* PUMP_STATE_REQUEST */
	SF_MESSAGE_EVENT_CLASS_PRESSURE_DECAY_TEST_RESULT_NOTICE, /* PRESSURE_DECAY_TEST_RESULT_NOTICE */
	SF_MESSAGE_EVENT_CLASS_TANK_PRESSURE_CONTROL_MODE_REQUEST, /* TANK_PRESSURE_CONTROL_MODE_REQUEST */
	SF_MESSAGE_EVENT_CLASS_TANK_PRESSURE_CONTROL_MODE_NOTICE, /* TANK_PRESSURE_CONTROL_MODE_NOTICE */
	SF_MESSAGE_EVENT_CLASS_CHAMBER_PRESSURE_REQUEST_INVALID, /* CHAMBER_PRESSURE_REQUEST_INVALID */
	SF_MESSAGE_EVENT_CLASS_CHAMBER_PRESSURE_NOTICE, /* CHAMBER_PRESSURE_NOTICE */
	SF_MESSAGE_EVENT_CLASS_TANK_PRESSURE_RANGE_REQUEST, /* TANK_PRESSURE_RANGE_REQUEST */
	SF_MESSAGE_EVENT_CLASS_TANK_PRESSURE_RANGE_NOTICE, /* TANK_PRESSURE_RANGE_NOTICE */
	SF_MESSAGE_EVENT_CLASS_EOR_SENSOR_TRIGGER_THRESHOLD_NOTICE, /* EOR_SENSOR_TRIGGER_THRESHOLD_NOTICE */
	SF_MESSAGE_EVENT_CLASS_EOR_SENSOR_TRIGGER_THRESHOLD_REQUEST, /* EOR_SENSOR_TRIGGER_THRESHOLD_REQUEST */
	SF_MESSAGE_EVENT_CLASS_SYSTEM_STATE_NOTICE, /* SYSTEM_STATE_NOTICE */
	SF_MESSAGE_EVENT_CLASS_PUMP_DUTY_CYCLE_ERROR_NOTICE, /* PUMP_DUTY_CYCLE_ERROR_NOTICE */
	SF_MESSAGE_EVENT_CLASS_PUMP_DUTY_CYCLE_WARNING_NOTICE, /* PUMP_DUTY_CYCLE_WARNING_NOTICE */
	SF_MESSAGE_EVENT_CLASS_PUMP_ON_TOO_LONG_ERROR_NOTICE, /* PUMP_ON_TOO_LONG_ERROR_NOTICE */
	SF_MESSAGE_EVENT_CLASS_PUMP_ON_TOO_LONG_WARNING_NOTICE, /* PUMP_ON_TOO_LONG_WARNING_NOTICE */
	SF_MESSAGE_EVENT_CLASS_EOR_CALIBRATION_STATE_NOTICE, /* EOR_CALIBRATION_STATE_NOTICE */
	SF_MESSAGE_EVENT_CLASS_EOR_CALIBRATION_REQUEST, /* EOR_CALIBRATION_REQUEST */
	SF_MESSAGE_EVENT_CLASS_CHAMBER_LATCH_STATE_REQUEST, /* CHAMBER_LATCH_STATE_REQUEST */
	SF_MESSAGE_EVENT_CLASS_PINCH_VALVE_STATE_REQUEST, /* PINCH_VALVE_STATE_REQUEST */
	SF_MESSAGE_EVENT_CLASS_EXHAUST_VALVE_STATE_REQUEST, /* EXHAUST_VALVE_STATE_REQUEST */
	SF_MESSAGE_EVENT_CLASS_FILL_VALVE_STATE_REQUEST, /* FILL_VALVE_STATE_REQUEST */
	SF_MESSAGE_EVENT_CLASS_CHAMBER_LATCH_STATE_NOTICE, /* CHAMBER_LATCH_STATE_NOTICE */
	SF_MESSAGE_EVENT_CLASS_PINCH_VALVE_STATE_NOTICE, /* PINCH_VALVE_STATE_NOTICE */
	SF_MESSAGE_EVENT_CLASS_CHAMBER_PRESSURE_REQUEST, /* CHAMBER_PRESSURE_REQUEST */
	SF_MESSAGE_EVENT_CLASS_CHAMBER_PRESSURE_ERROR_NOTICE, /* CHAMBER_PRESSURE_ERROR_NOTICE */
	SF_MESSAGE_EVENT_CLASS_PRESSURE_DECAY_TEST_REQUEST, /* PRESSURE_DECAY_TEST_REQUEST */
	SF_MESSAGE_EVENT_CLASS_RECIPE_PARSE_SUCCESS_NOTICE, /* RECIPE_PARSE_SUCCESS_NOTICE */
	SF_MESSAGE_EVENT_CLASS_RECIPE_PARSE_FAILURE_NOTICE, /* RECIPE_PARSE_FAILURE_NOTICE */
	SF_MESSAGE_EVENT_CLASS_RECIPE_LINE_NUMBER_NOTICE, /* RECIPE_LINE_NUMBER_NOTICE */
	SF_MESSAGE_EVENT_CLASS_RECIPE_USER_VARIABLE_NOTICE, /* RECIPE_USER_VARIABLE_NOTICE */
	SF_MESSAGE_EVENT_CLASS_DEPRESSURIZATION_DONE_NOTICE, /* DEPRESSURIZATION_DONE_NOTICE */
	SF_MESSAGE_EVENT_CLASS_RECIPE_EXEC_FUNCTION_REQUEST, /* RECIPE_EXEC_FUNCTION_REQUEST */
	SF_MESSAGE_EVENT_CLASS_RECIPE_EXEC_FUNCTION_NOTICE, /* RECIPE_EXEC_FUNCTION_NOTICE */
	SF_MESSAGE_EVENT_CLASS_RECIPE_EXEC_IS_IDLE_NOTICE, /* RECIPE_EXEC_IS_IDLE_NOTICE */
	SF_MESSAGE_EVENT_CLASS_RECIPE_EXEC_IS_TERMINATING_NOTICE, /* RECIPE_EXEC_IS_TERMINATING_NOTICE */
	SF_MESSAGE_EVENT_CLASS_NEW_RECIPE_CONDITION_NOTICE, /* NEW_RECIPE_CONDITION_NOTICE */
	SF_MESSAGE_EVENT_CLASS_RECIPE_CONDITION_IS_TRUE_NOTICE, /* RECIPE_CONDITION_IS_TRUE_NOTICE */
	SF_MESSAGE_EVENT_CLASS_RTC_READY_NOTICE, /* RTC_READY_NOTICE */
	SF_MESSAGE_EVENT_CLASS_FILE_SYSTEM_REQUEST, /* FILE_SYSTEM_REQUEST */
	SF_MESSAGE_EVENT_CLASS_FILE_SYSTEM_NOTICE, /* FILE_SYSTEM_NOTICE */
	SF_MESSAGE_EVENT_CLASS_CHAMBER_PIN_FEEDBACK_PAIR_NOTICE, /* CHAMBER_PIN_FEEDBACK_PAIR_NOTICE */
	SF_MESSAGE_EVENT_CLASS_READ_RECIPE_FILES_REQUEST, /* READ_RECIPE_FILES_REQUEST */
	SF_MESSAGE_EVENT_CLASS_SYSTEM_SETTINGS_AVAILABLE_NOTICE, /* SYSTEM_SETTINGS_AVAILABLE_NOTICE */
	SF_MESSAGE_EVENT_CLASS_SET_SYSTEM_SETTING_AUDIO_VOLUME_REQUEST, /* SET_SYSTEM_SETTING_AUDIO_VOLUME_REQUEST */
	SF_MESSAGE_EVENT_CLASS_SET_SYSTEM_SETTING_DISPLAY_BRIGHTNESS_REQUEST, /* SET_SYSTEM_SETTING_DISPLAY_BRIGHTNESS_REQUEST */
	SF_MESSAGE_EVENT_CLASS_SET_SYSTEM_SETTING_USER_PASSWORD_REQUIRED_REQUEST, /* SET_SYSTEM_SETTING_USER_PASSWORD_REQUIRED_REQUEST */
	SF_MESSAGE_EVENT_CLASS_SET_SYSTEM_SETTING_SERIAL_NUMBER_REQUEST, /* SET_SYSTEM_SETTING_SERIAL_NUMBER_REQUEST */
	SF_MESSAGE_EVENT_CLASS_SET_SYSTEM_SETTING_EOR_EMITTER_LEVEL_REQUEST, /* SET_SYSTEM_SETTING_EOR_EMITTER_LEVEL_REQUEST */
	SF_MESSAGE_EVENT_CLASS_EOR_LOGGING_START_NOTICE, /* EOR_LOGGING_START_NOTICE */
	SF_MESSAGE_EVENT_CLASS_EOR_LOGGING_STOP_NOTICE, /* EOR_LOGGING_STOP_NOTICE */
	SF_MESSAGE_EVENT_CLASS_EOR_LOGGING_EVENT_NOTICE, /* EOR_LOGGING_EVENT_NOTICE */
	SF_MESSAGE_EVENT_CLASS_RUN_SETUP_USER_ACTION_NOTICE, /* RUN_SETUP_USER_ACTION_NOTICE */
	SF_MESSAGE_EVENT_CLASS_MIXING_TIMER_NOTICE, /* MIXING_TIMER_EXPIRATION_NOTICE */
	SF_MESSAGE_EVENT_CLASS_SAMPLE_VOLUME_CHANGE_REQUEST, /* SAMPLE_VOLUME_CHANGE_REQUEST */
	SF_MESSAGE_EVENT_CLASS_SAMPLE_VOLUME_CHANGE_NOTICE, /* SAMPLE_VOLUME_CHANGE_NOTICE */
	SF_MESSAGE_EVENT_CLASS_SAMPLE_EXEC_FUNCTION_NOTICE, /* SAMPLE_EXEC_FUNCTION_NOTICE */
	SF_MESSAGE_EVENT_CLASS_SAMPLE_EXEC_IS_IDLE_NOTICE, /* SAMPLE_EXEC_IS_IDLE_NOTICE */
	SF_MESSAGE_EVENT_CLASS_SYSTEM_LOGIN_RESULT, /* SYSTEM_LOGIN_RESULT */
	SF_MESSAGE_EVENT_CLASS_USER_LOGGED_OFF, /* USER_LOGGED_OFF */
	SF_MESSAGE_EVENT_CLASS_NEW_USER_ADDED_NOTICE, /* NEW_USER_ADDED_NOTICE */
	SF_MESSAGE_EVENT_CLASS_SET_SYSTEM_SETTING_CURRENT_INDEX_REQUEST, /* SET_SYSTEM_SETTING_CURRENT_INDEX_REQUEST */
	SF_MESSAGE_EVENT_CLASS_SAMPLE_EXEC_FUNCTION_REQUEST, /* SAMPLE_EXEC_FUNCTION_REQUEST */
	SF_MESSAGE_EVENT_CLASS_MIXED_KIT_REMOVED_NOTICE, /* MIXED_KIT_REMOVED_NOTICE */
	SF_MESSAGE_EVENT_CLASS_RUN_SETUP_STATE_CHANGE_NOTICE, /* RUN_SETUP_STATE_CHANGE_NOTICE */
	SF_MESSAGE_EVENT_CLASS_CHAMBER_PRESSURE_ATTAINED_NOTICE, /* CHAMBER_PRESSURE_ATTAINED_NOTICE */
	SF_MESSAGE_EVENT_CLASS_SAMPLE_EXEC_CAUTION_NOTICE, /* SAMPLE_EXEC_CAUTION_NOTICE */
	SF_MESSAGE_EVENT_CLASS_SAMPLE_EXEC_PROCESSING_TIME_NOTICE, /* SAMPLE_EXEC_PROCESSING_TIME_NOTICE */
	SF_MESSAGE_EVENT_CLASS_RECIPE_STREAM_CLEAR_REQUEST, /* RECIPE_STREAM_CLEAR_REQUEST */
	SF_MESSAGE_EVENT_CLASS_RECIPE_STREAM_CLEAR_NOTICE, /* RECIPE_STREAM_CLEAR_NOTICE */
	SF_MESSAGE_EVENT_CLASS_PRE_RUN_SELF_TEST_FAILURE_NOTICE, /* PRE_RUN_SELF_TEST_FAILURE_NOTICE */
	SF_MESSAGE_EVENT_CLASS_TCS_REGION_NOTICE, /* TCS_REGION_NOTICE */
	SF_MESSAGE_EVENT_CLASS_SERVICE_DIALOG_ACTION_NOTICE, /* SERVICE_DIALOG_ACTION_NOTICE */
	SF_MESSAGE_EVENT_CLASS_CHAMBER_LATCH_FEEDBACK_PAIR_NOTICE, /* CHAMBER_LATCH_FEEDBACK_PAIR_NOTICE */
	SF_MESSAGE_EVENT_CLASS_UNLATCH_REQUEST_WITH_PRESSURE_CAUTION, /* UNLATCH_REQUEST_WITH_PRESSURE_CAUTION */
	SF_MESSAGE_EVENT_CLASS_OPEN_LATCH_EXHAUST_WITH_PRESSURE_CAUTION, /* OPEN_LATCH_EXHAUST_WITH_PRESSURE_CAUTION */
	SF_MESSAGE_EVENT_CLASS_CHAMBER_LATCH_TIMEOUT_ERROR_NOTICE, /* CHAMBER_LATCH_TIMEOUT_ERROR_NOTICE */
	SF_MESSAGE_EVENT_CLASS_CHAMBER_PIN_STATE_NOTICE, /* CHAMBER_PIN_STATE_NOTICE */
	SF_MESSAGE_EVENT_CLASS_CHAMBER_PIN_TIMEOUT_ERROR_NOTICE, /* CHAMBER_PIN_TIMEOUT_ERROR_NOTICE */
	SF_MESSAGE_EVENT_CLASS_PINCH_VALVE_TIMEOUT_ERROR_NOTICE, /* PINCH_VALVE_TIMEOUT_ERROR_NOTICE */
	SF_MESSAGE_EVENT_CLASS_CHAMBER_PRESSURE_REQUEST_WHEN_NOT_OK_CAUTION, /* CHAMBER_PRESSURE_REQUEST_WHEN_NOT_OK_CAUTION */
	SF_MESSAGE_EVENT_CLASS_PIN_WITH_LATCH_NOT_ENGAGED_CAUTION, /* PIN_WITH_LATCH_NOT_ENGAGED_CAUTION */
	SF_MESSAGE_EVENT_CLASS_CHAMBER_LATCH_SENSOR_ERROR_NOTICE, /* CHAMBER_LATCH_SENSOR_ERROR_NOTICE */
	SF_MESSAGE_EVENT_CLASS_CHAMBER_PIN_FEEDBACK_NOTICE, /* CHAMBER_PIN_FEEDBACK_NOTICE */
	SF_MESSAGE_EVENT_CLASS_CHAMBER_LATCH_FEEDBACK_NOTICE, /* CHAMBER_LATCH_FEEDBACK_NOTICE */
	SF_MESSAGE_EVENT_CLASS_HEADER_ONLY, /* HEADER_ONLY */
	SF_MESSAGE_EVENT_CLASS_CLEANUP_TIMER_NOTICE, /* CLEANUP_TIMER_NOTICE */
	SF_MESSAGE_EVENT_CLASS_SYSTEM_TIME_UPDATE_NOTICE, /* SYSTEM_TIME_UPDATE_NOTICE */
	SF_MESSAGE_EVENT_CLASS_CHAMBER_PRESSURE_SWITCH_FILL_TIMEOUT_NOTICE, /* CHAMBER_PRESSURE_SWITCH_FILL_TIMEOUT_NOTICE */
	SF_MESSAGE_EVENT_CLASS_CHAMBER_PRESSURE_SWITCH_VENT_TIMEOUT_NOTICE, /* CHAMBER_PRESSURE_SWITCH_VENT_TIMEOUT_NOTICE */
	SF_MESSAGE_EVENT_CLASS_POWER_SUPPLY_VOLTAGE_ERROR_NOTICE, /* POWER_SUPPLY_VOLTAGE_ERROR_NOTICE */
	SF_MESSAGE_EVENT_CLASS_REGULATOR_PRESSURE_ADC_NOT_INITIALIZED_ERROR_NOTICE, /* REGULATOR_PRESSURE_ADC_NOT_INITIALIZED_ERROR_NOTICE */
	SF_MESSAGE_EVENT_CLASS_REGULATOR_PRESSURE_ADC_COM_INTERRUPTED_ERROR_NOTICE, /* REGULATOR_PRESSURE_ADC_COM_INTERRUPTED_ERROR_NOTICE */
	SF_MESSAGE_EVENT_CLASS_CHAMBER_PRESSURIZED_BUT_NOT_LATCHED_ERROR_NOTICE, /* CHAMBER_PRESSURIZED_BUT_NOT_LATCHED_ERROR_NOTICE */
	SF_MESSAGE_EVENT_CLASS_CHAMBER_PRESSURE_TOO_HIGH_ERROR_NOTICE, /* CHAMBER_PRESSURE_TOO_HIGH_ERROR_NOTICE */
	SF_MESSAGE_EVENT_CLASS_CHAMBER_PRESSURE_DETECTED_WITH_LOW_SUPPLY_PRESSURE_ERROR_NOTICE, /* CHAMBER_PRESSURE_DETECTED_WITH_LOW_SUPPLY_PRESSURE_ERROR_NOTICE */
	SF_MESSAGE_EVENT_CLASS_FAULT_DEPRESSURIZATION_ACKNOWLEDGED_NOTICE, /* FAULT_DEPRESSURIZATION_ACKNOWLEDGED_NOTICE */
	SF_MESSAGE_EVENT_CLASS_TANK_PRESSURE_TOO_HIGH_ERROR_NOTICE, /* TANK_PRESSURE_TOO_HIGH_ERROR_NOTICE */
	SF_MESSAGE_EVENT_CLASS_PINCH_VALVE_INCORRECT_STATE_ERROR_NOTICE, /* PINCH_VALVE_INCORRECT_STATE_ERROR_NOTICE */
	SF_MESSAGE_EVENT_CLASS_EVENT_LOGGING_AVAILABLE_NOTICE, /* EVENT_LOGGING_AVAILABLE_NOTICE */
	SF_MESSAGE_EVENT_CLASS_SYSTEM_FAULT_NOTICE, /* SYSTEM_FAULT_NOTICE */
	SF_MESSAGE_EVENT_CLASS_SYSTEM_FAULT_CLEAR_REQUEST, /* SYSTEM_FAULT_CLEAR_REQUEST */
	SF_MESSAGE_EVENT_CLASS_TANK_PRESSURE_IS_OK_FOR_SAMPLE_PROCESSING_CHANGE_NOTICE, /* TANK_PRESSURE_IS_OK_FOR_SAMPLE_PROCESSING_CHANGE_NOTICE */
	SF_MESSAGE_EVENT_CLASS_EOR_LOGGING_IS_ACTIVE_NOTICE, /* EOR_LOGGING_IS_ACTIVE_NOTICE */
	SF_MESSAGE_EVENT_CLASS_SYSTEM_SETTING_SERIAL_NUMBER_IS_VALID_NOTICE, /* SYSTEM_SETTING_SERIAL_NUMBER_IS_VALID_NOTICE */
	SF_MESSAGE_EVENT_CLASS_SYSTEM_SETTING_SERIAL_NUMBER_IS_INVALID_NOTICE, /* SYSTEM_SETTING_SERIAL_NUMBER_IS_INVALID_NOTICE */
	SF_MESSAGE_EVENT_CLASS_SET_SYSTEM_SETTING_RUN_TIMES_REQUEST, /* SET_SYSTEM_SETTING_RUN_TIMES_REQUEST */
	SF_MESSAGE_EVENT_CLASS_EVENT_LOG_NOTE_REQUEST, /* EVENT_LOG_NOTE_REQUEST */
	SF_MESSAGE_EVENT_CLASS_SET_SYSTEM_SETTING_STANDBY_CONTROL_REQUEST, /* SET_SYSTEM_SETTING_STANDBY_CONTROL_REQUEST */
	SF_MESSAGE_EVENT_CLASS_EXIT_STANDBY_REQUEST, /* EXIT_STANDBY_REQUEST */
	SF_MESSAGE_EVENT_CLASS_DIAGNOSTICS_BEGIN_NOTICE, /* DIAGNOSTICS_BEGIN_NOTICE */
	SF_MESSAGE_EVENT_CLASS_DIAGNOSTICS_END_NOTICE, /* DIAGNOSTICS_END_NOTICE */
	SF_MESSAGE_EVENT_CLASS_DIAGNOSTICS_REQUEST, /* DIAGNOSTICS_REQUEST */
	SF_MESSAGE_EVENT_CLASS_CHAMBER_LATCH_STATE_COMMAND_NOTICE, /* CHAMBER_LATCH_STATE_COMMAND_NOTICE */
	SF_MESSAGE_EVENT_CLASS_CHAMBER_PIN_STATE_COMMAND_NOTICE, /* CHAMBER_PIN_STATE_COMMAND_NOTICE */
	SF_MESSAGE_EVENT_CLASS_PINCH_VALVE_STATE_COMMAND_NOTICE, /* PINCH_VALVE_STATE_COMMAND_NOTICE */
	SF_MESSAGE_EVENT_CLASS_SET_SYSTEM_SETTING_PASSWORD_REQUEST, /* SET_SYSTEM_SETTING_PASSWORD_REQUEST */
	SF_MESSAGE_EVENT_CLASS_SYSTEM_SETTING_PASSWORD_CHANGED_NOTICE, /* SYSTEM_SETTING_PASSWORD_CHANGED_NOTICE */
	SF_MESSAGE_EVENT_CLASS_CHAMBER_PRESSURE_MARGINAL_NOTICE, /* CHAMBER_PRESSURE_MARGINAL_NOTICE */
	SF_MESSAGE_EVENT_CLASS_PUMP_RUN_TIME_RESET_REQUEST, /* PUMP_RUN_TIME_RESET_REQUEST */
	SF_MESSAGE_EVENT_CLASS_KIT_DETECTED_ON_STARTUP_NOTICE, /* KIT_DETECTED_ON_STARTUP_NOTICE */
	SF_MESSAGE_EVENT_CLASS_PRIME_WASTE_NOTICE, /* PRIME_WASTE_NOTICE */
	SF_MESSAGE_EVENT_CLASS_PRIME_SAMPLE_NOTICE, /* PRIME_SAMPLE_NOTICE */
	SF_MESSAGE_EVENT_CLASS_PRIME_CYCLE_NOTICE, /* PRIME_CYCLE_NOTICE */
	SF_MESSAGE_EVENT_CLASS_SAMPLE_PROCESSING_EVENT_NOTICE, /* SAMPLE_PROCESSING_EVENT_NOTICE */
	SF_MESSAGE_EVENT_CLASS_PUMP_DUTY_CYCLE_NOTICE, /* PUMP_DUTY_CYCLE_NOTICE */
	SF_MESSAGE_EVENT_CLASS_SALINE_LOSS_DATA_BEFORE_STEADY_STATE_NOTICE, /* SALINE_LOSS_DATA_BEFORE_STEADY_STATE_NOTICE */
	SF_MESSAGE_EVENT_CLASS_SALINE_LOSS_DATA_IN_STEADY_STATE_NOTICE, /* SALINE_LOSS_DATA_IN_STEADY_STATE_NOTICE */
	SF_MESSAGE_EVENT_CLASS_SALINE_LOSS_DATA_IN_FLUSH_NOTICE, /* SALINE_LOSS_DATA_IN_FLUSH_NOTICE */
	SF_MESSAGE_EVENT_CLASS_SALINE_LOST_ERROR_NOTICE, /* SALINE_LOST_ERROR_NOTICE */
	SF_MESSAGE_EVENT_CLASS_FAULTS_CLEARED_NOTICE, /* FAULTS_CLEARED_NOTICE */
	SF_MESSAGE_EVENT_CLASS_SET_SYSTEM_SETTING_SAMPLE_PROCESSING_STATE_REQUEST, /* SET_SYSTEM_SETTING_SAMPLE_PROCESSING_STATE_REQUEST */
	SF_MESSAGE_EVENT_CLASS_SAMPLE_INFO_NOTICE, /* SAMPLE_INFO_NOTICE */
	SF_MESSAGE_EVENT_CLASS_ALG_EOR_TRIGGERED_NOTICE, /* ALG_EOR_TRIGGERED_NOTICE */
	SF_MESSAGE_EVENT_CLASS_CHAMBER_PRESSURE_SWITCH_DEVIATION_NOTICE, /* CHAMBER_PRESSURE_SWITCH_DEVIATION_NOTICE */
	SF_MESSAGE_EVENT_CLASS_TANK_PRESSURE_GETTING_LOW_WARNING_NOTICE, /* TANK_PRESSURE_GETTING_LOW_WARNING_NOTICE */
	SF_MESSAGE_EVENT_CLASS_PUMP_DISABLED_NOTICE, /* PUMP_DISABLED_NOTICE */
	SF_MESSAGE_EVENT_CLASS_DEPRESSURIZATION_SEQUENCE_STEP_NOTICE, /* DEPRESSURIZATION_SEQUENCE_STEP_NOTICE */
	SF_MESSAGE_EVENT_CLASS_SYSTEM_TIME_UPDATE_REQUEST, /* SYSTEM_TIME_UPDATE_REQUEST */
	SF_MESSAGE_EVENT_CLASS_PRESSURE_SWITCH_MACHINE_STATE_NOTICE, /* PRESSURE_SWITCH_MACHINE_STATE_NOTICE */
	SF_MESSAGE_EVENT_CLASS_PRESSURE_DECAY_TEST_LOG_NOTICE, /* PRESSURE_DECAY_TEST_LOG_NOTICE */
	SF_MESSAGE_EVENT_CLASS_FAKED_LOG_DATA, /* FAKED_LOG_DATA */
	SF_MESSAGE_EVENT_CLASS_INVALID_EVENT_CLASS_MUST_BE_LAST_EVENT_CLASS, /* INVALID_EVENT_CLASS_MUST_BE_LAST_EVENT_CLASS */
} sf_message_event_class_t;

typedef enum
{
  SYSTEM_MANAGER_CRC_FAILED
	, FIRST_SYSTEM_MANAGER_EVENT = SYSTEM_MANAGER_CRC_FAILED
  , SYSTEM_MANAGER_POST_SUCCESSFUL
  , SYSTEM_MANAGER_SHORT_MIXING_TIMER_EVENT
  , SYSTEM_MANAGER_LONG_MIXING_TIMER_EVENT
  , SYSTEM_MANAGER_USER_LOGIN_TIMER_EVENT
  , SYSTEM_MANAGER_RUN_SETUP_COMPLETE
  , SYSTEM_MANAGER_RETURN_TO_RUN_SETUP
  , SYSTEM_MANAGER_PRST_RECOVERY_COMPLETE
  , SYSTEM_MANAGER_CLEANUP_TIMER_EVENT
  , SYSTEM_MANAGER_MESSAGE_QUEUE_EVENT
  , SYSTEM_MANAGER_WATCHDOG_TIMER_EVENT
  , SYSTEM_MANAGER_STANDBY_TIMER_EVENT
  , SYSTEM_MANAGER_RUN_TIMER_EVENT
	, SYSTEM_MANAGER_EVENT_COUNT
} system_manager_event_t;

typedef enum
{
	 RTC_UPDATE_TIME
	,RTC_UPDATE_DATE
} time_update_t;

typedef enum
{
   SFT_inhibiting
   , SFT_run_terminating
   , SFT_safety
   , SFT_health
   , SFT_count
} system_fault_types_t;

typedef enum
{
      RSA_setup_started
    , RSA_sample_injected
    , RSA_saline_draw
    , RSA_mixing_completed
    , RSA_long_mixing_timeout_acknowledged
    , RSA_run_setup_cancelled
   , RSA_new_kit
    , RSA_setup_complete
   , RSA_additional_recovery_guidance_displayed
   , RSA_run_completion_acknowledged
   , RSA_run_note_action
} run_setup_actions_t;


typedef enum
{
   PUMP_UNKNOWN,
   PUMP_OFF,
   PUMP_ON
} pump_state_t;

typedef enum {
   SA_service_dialog_entered
   , SA_manual_controls_entered
   , SA_recipe_screen_entered
   , SA_calibration_screen_entered
   , SA_fault_service_screen_entered
   , SA_service_dialog_exited
   , SA_custom_recipe_screen_entered
} service_dialog_actions_t;

typedef enum
{
   RTF_waste_eor_transition_failure

   /** 
    *  @requirement SRS-SP-0147
    *  @requirement SRS-SP-0148
    */
   , RTF_chamber_pressure_error         
   , RTF_power_supply_output_voltage    //!< @requirement SRS-SP-0153
   , RTF_chamber_latch_timeout          //!< @requirement SRS-SP-0443
   , RTF_chamber_pin_timeout            //!< @requirement SRS-SP-0443
   , RTF_pinch_valve_timeout            //!< @requirement SRS-SP-0443
   , RTF_pinch_valve_incorrect_state    //!< @requirement SRS-SP-0753
   , RTF_saline_lost
   , RTF_count
} run_terminating_fault_t;

typedef enum
{
   IF_pressure_decay_test_failure     //!< @requirement SRS-SP-0412
   , IF_pump_on_too_long              //!< @requirement SRS-SP-0735
   , IF_pump_duty_cycle               //!< @requirement SRS-SP-0152
   , IF_system_safety
   , IF_chamber_latch_timeout         //!< @requirement SRS-SP-0443
   , IF_chamber_pin_timeout           //!< @requirement SRS-SP-0443
   , IF_pinch_valve_timeout           //!< @requirement SRS-SP-0443
   , IF_pinch_valve_incorrect_state   //!< @requirement SRS-SP-0753
   , IF_count
} inhibiting_fault_t;

typedef enum
{
   /** 
    * SRS-SP-0690
   */
     SSF_chamber_pressure_switch_fill_timeout
	, SSF_first = SSF_chamber_pressure_switch_fill_timeout

   /**
    * SRS-SP-0690
   */
   , SSF_chamber_pressure_switch_vent_timeout

   /** 
    *  @requirement SRS-SP-0301
    *  @requirement SRS-SP-0302
   */
   , SSF_unlatched_chamber_pressurized

   /** 
    *  @requirement SRS-SP-0149
    *  @requirement SRS-SP-0150
   */
   , SSF_chamber_pressure_switch_error

   /** 
    * @requirement SRS-SP-0736
   */
   , SSF_excessive_tank_pressure

   /**
   * @requirement SRS-SP-0738
   * @requirement SRS-SP-0737
   */
   , SSF_excessive_chamber_pressure    

   /**
    * @requirement SRS-SP-0786
   */
   , SSF_insufficient_supply_pressure

   /**
    * @requirement SRS_SP_0301
    * @requirement SRS_SP_0302
    */
   , SSF_chamber_pressurized_but_not_latched

   /**
    * @requirement SRS_SP_0785
    * @requirement SRS_SP_0786
    */
   , SSF_chamber_pressure_detected_with_low_supply_pressure

   , SSF_count
} system_safety_fault_t;

typedef enum
{
   SHE_flash_crc_failed
   , SHE_count
} system_health_event_t;

typedef enum e_sf_message_event {
	SF_MESSAGE_EVENT_UNUSED, /* Unused */
	SF_MESSAGE_EVENT_NEW_DATA, /* New Data */
	SF_MESSAGE_EVENT_MSM_INSERTED, /* MSM Inserted */
	SF_MESSAGE_EVENT_MSM_REMOVED, /* MSM Removed */
	SF_MESSAGE_EVENT_MSM_NOT_READABLE, /* MSM Not Readable */
	SF_MESSAGE_EVENT_SAMPLE_VOLUME_ENTRY_ALLOWED, /* Sample Volume Entry Allowed */
	SF_MESSAGE_EVENT_SAMPLE_VOLUME_ENTRY_PROHIBITED, /* Sample Volume Entry Prohibited */
	SF_MESSAGE_EVENT_INVALID_EVENT_MUST_BE_LAST_EVENT, /* INVALID_EVENT_MUST_BE_LAST_EVENT */
} sf_message_event_t;

typedef enum st_sf_touch_panel_event
{
    SF_TOUCH_PANEL_EVENT_INVALID,         ///< Invalid touch data
    SF_TOUCH_PANEL_EVENT_HOLD,            ///< Touch has not moved since last touch event.
    SF_TOUCH_PANEL_EVENT_MOVE,            ///< Touch has moved since last touch event.
    SF_TOUCH_PANEL_EVENT_DOWN,            ///< New touch event reported.
    SF_TOUCH_PANEL_EVENT_UP,              ///< Touch released.
	SF_TOUCH_PANEL_EVENT_NONE             ///< No valid touch event happened.
} sf_touch_panel_event_t;


