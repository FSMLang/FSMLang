/**
	subSubMachine1.c

	This file automatically generated by FSMLang
*/

#include "subSubMachine1.h"




const SUB_SUB_MACHINE1_ACTION_TRANS subSubMachine1_action_array[subSubMachine1_numEvents][subSubMachine1_numStates] =
{
	{
		/* -- y1 -- */

		/* -- z1 -- */	{subSubMachine1_x1,subSubMachine1_z1}
		/* -- z2 -- */	, {subSubMachine1_noAction, subSubMachine1_z2}
	},
	{
		/* -- y2 -- */

		/* -- z1 -- */	{subSubMachine1_x2,subSubMachine1_z2}
		/* -- z2 -- */	, {subSubMachine1_noAction, subSubMachine1_z2}
	},
};
SUB_MACHINE1_EVENT subSubMachine1_sub_machine_fn(SUB_MACHINE1_EVENT e)
{
	return subSubMachine1FSM(psubSubMachine1, e);
}


SUB_MACHINE1_SUB_FSM_IF subSubMachine1_sub_fsm_if =
{
		.subFSM = subSubMachine1_sub_machine_fn
	, .first_event = subMachine1_subSubMachine1_y1
	, .last_event = subMachine1_subSubMachine1_y2
};

SUB_SUB_MACHINE1 subSubMachine1 = {
	subSubMachine1_z1,
	subMachine1_subSubMachine1_y1,
	&subSubMachine1_action_array,
	subSubMachine1FSM
};

pSUB_SUB_MACHINE1 psubSubMachine1 = &subSubMachine1;

#ifndef EVENT_IS_NOT_EXCLUDED_FROM_LOG
#define EVENT_IS_NOT_EXCLUDED_FROM_LOG(e) (e == e)
#endif
SUB_MACHINE1_EVENT subSubMachine1FSM(pSUB_SUB_MACHINE1 pfsm, SUB_MACHINE1_EVENT event)
{
/* writeOriginalSubFSM */
	SUB_MACHINE1_EVENT new_e;

	SUB_MACHINE1_EVENT e = event;

	while (
		(e != THIS(noEvent))
		&& (e >= THIS(y1))
	)
	{

#ifdef SUB_SUB_MACHINE1_DEBUG
if (EVENT_IS_NOT_EXCLUDED_FROM_LOG(e))
{
	DBG_PRINTF("event: %s; state: %s"
,SUB_SUB_MACHINE1_EVENT_NAMES[e - THIS(y1)]
,SUB_SUB_MACHINE1_STATE_NAMES[pfsm->state]
);
}
#endif

	/* This is read-only data to facilitate error reporting in action functions */
	pfsm->event = e;

		new_e = ((* (*pfsm->actionArray)[e - THIS(y1)][pfsm->state].action)(pfsm));

		pfsm->state = (*pfsm->actionArray)[e - THIS(y1)][pfsm->state].transition;

		e = new_e;

	} 
	return e == THIS(noEvent) ? PARENT(noEvent) : e;

}

SUB_MACHINE1_EVENT __attribute__((weak)) subSubMachine1_x1(pSUB_SUB_MACHINE1 pfsm)
{
	DBG_PRINTF("weak: subSubMachine1_x1");
	(void) pfsm;
	return THIS(noEvent);
}

SUB_MACHINE1_EVENT __attribute__((weak)) subSubMachine1_x2(pSUB_SUB_MACHINE1 pfsm)
{
	DBG_PRINTF("weak: subSubMachine1_x2");
	(void) pfsm;
	return THIS(noEvent);
}

SUB_MACHINE1_EVENT __attribute__((weak)) subSubMachine1_noAction(pSUB_SUB_MACHINE1 pfsm)
{
	DBG_PRINTF("weak: subSubMachine1_noAction");
	(void) pfsm;
	return PARENT(noEvent);
}



#ifdef SUB_SUB_MACHINE1_DEBUG
char *SUB_SUB_MACHINE1_EVENT_NAMES[] = {
	 "subSubMachine1_y1"
	, "subSubMachine1_y2"
	, "subSubMachine1_noEvent"
	, "subSubMachine1_numEvents"
};

char *SUB_SUB_MACHINE1_STATE_NAMES[] = {
	 "subSubMachine1_z1"
	,"subSubMachine1_z2"
};

#endif
