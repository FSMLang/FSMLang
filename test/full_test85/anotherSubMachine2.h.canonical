/**
	anotherSubMachine2.h

	This file automatically generated by FSMLang
*/

#ifndef _ANOTHERSUBMACHINE2_H_
#define _ANOTHERSUBMACHINE2_H_

#include "another.h"

#ifdef ANOTHER_SUB_MACHINE2_DEBUG
#include <stdio.h>
#include <stdlib.h>
#endif

#define DECLARE_ANOTHER_SUB_MACHINE2_MACHINE(A) \
ANOTHER_SUB_MACHINE2 A =\
{\
	anotherSubMachine2_sss1,\n	anotherSubMachine2_anotherNewMachine_noEvent,\
	&anotherSubMachine2_state_fn_array,\
	anotherSubMachine2FSM\
};\
ANOTHER_SUB_MACHINE2 *p##A = &(A);

/*
	sub-machine events are included in the top-level machine event enumeration.
	These macros set the appropriate names for events from THIS machine
	and those from the PARENT machine.

	They may be turned off as needed.
*/
#ifndef NO_EVENT_CONVENIENCE_MACROS
#undef THIS
#define THIS(A) anotherNewMachine_anotherSubMachine2_##A
#define PARENT(A) anotherNewMachine_##A
#endif

#ifdef ANOTHER_SUB_MACHINE2_DEBUG
extern char *ANOTHER_SUB_MACHINE2_EVENT_NAMES[];
#endif

typedef enum {
	 anotherSubMachine2_sss1
	, anotherSubMachine2_sss2
	, anotherSubMachine2_sss3
	, anotherSubMachine2_numStates
} ANOTHER_SUB_MACHINE2_STATE;

#ifdef ANOTHER_SUB_MACHINE2_DEBUG
extern char *ANOTHER_SUB_MACHINE2_STATE_NAMES[];
#endif

typedef struct _anotherSubMachine2_struct_ ANOTHER_SUB_MACHINE2, *pANOTHER_SUB_MACHINE2;
#undef FSM_TYPE_PTR
#define FSM_TYPE_PTR pANOTHER_SUB_MACHINE2
extern ANOTHER_SUB_MACHINE2 anotherSubMachine2;

extern pANOTHER_SUB_MACHINE2 panotherSubMachine2;

typedef ANOTHER_NEW_MACHINE_EVENT (*ANOTHER_SUB_MACHINE2_ACTION_FN)(pANOTHER_SUB_MACHINE2);

typedef ANOTHER_NEW_MACHINE_EVENT (*ANOTHER_SUB_MACHINE2_FSM)(pANOTHER_SUB_MACHINE2,ANOTHER_NEW_MACHINE_EVENT);

ANOTHER_NEW_MACHINE_EVENT anotherSubMachine2FSM(pANOTHER_SUB_MACHINE2,ANOTHER_NEW_MACHINE_EVENT);

typedef ANOTHER_NEW_MACHINE_EVENT (*ANOTHER_SUB_MACHINE2_STATE_FN)(pANOTHER_SUB_MACHINE2,ANOTHER_NEW_MACHINE_EVENT);

extern const ANOTHER_SUB_MACHINE2_STATE_FN anotherSubMachine2_state_fn_array[anotherSubMachine2_numStates];

struct _anotherSubMachine2_struct_ {
	ANOTHER_SUB_MACHINE2_STATE					state;
	ANOTHER_NEW_MACHINE_EVENT					event;
	ANOTHER_SUB_MACHINE2_STATE_FN const	(*statesArray)[anotherSubMachine2_numStates];
	ANOTHER_SUB_MACHINE2_FSM						fsm;
};

ANOTHER_NEW_MACHINE_EVENT anotherSubMachine2_sss1_stateFn(pANOTHER_SUB_MACHINE2,ANOTHER_NEW_MACHINE_EVENT);
ANOTHER_NEW_MACHINE_EVENT anotherSubMachine2_sss2_stateFn(pANOTHER_SUB_MACHINE2,ANOTHER_NEW_MACHINE_EVENT);
ANOTHER_NEW_MACHINE_EVENT anotherSubMachine2_sss3_stateFn(pANOTHER_SUB_MACHINE2,ANOTHER_NEW_MACHINE_EVENT);

ANOTHER_NEW_MACHINE_EVENT anotherSubMachine2_aaa1(pANOTHER_SUB_MACHINE2);
ANOTHER_NEW_MACHINE_EVENT anotherSubMachine2_aaa2(pANOTHER_SUB_MACHINE2);

#endif
